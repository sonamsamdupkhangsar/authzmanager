/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.4/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
    id("java")
    //id("org.springframework.boot") version "3.2.5"
}
//apply(plugin = "io.spring.dependency-management")
repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    mavenLocal()

    maven {
        url = uri("https://maven.pkg.github.com/sonamsamdupkhangsar/digitalocean-s3-lib")
        credentials {
            username = System.getenv("USERNAME")
            password = System.getenv("PERSONAL_ACCESS_TOKEN")
        }
    }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation("org.junit.jupiter:junit-jupiter:5.9.3")

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:32.1.1-jre")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:32.1.1-jre")
    implementation("org.springframework.security:spring-security-oauth2-client:6.2.4")
    implementation("org.springframework.boot:spring-boot-starter-security:3.2.5")
    implementation("org.springframework.boot:spring-boot-starter-web:3.2.5")
    implementation("org.springframework.security:spring-security-oauth2-jose:6.2.4")
    implementation ("org.springframework.boot:spring-boot-starter-webflux:3.2.5")
    testImplementation("org.springframework.boot:spring-boot-starter-test:3.2.5")
    testImplementation ("com.squareup.okhttp3:mockwebserver:4.0.1")

    implementation ("org.springframework.boot:spring-boot-starter-security:3.2.5")
   // implementation ("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.1.2")
    implementation("org.springframework.boot:spring-boot-starter-validation:3.2.5")
    implementation("org.springframework.data:spring-data-commons:3.1.2")
    implementation ("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.0")

    //implementation ("org.springframework.cloud:spring-cloud-starter-kubernetes-client-all:3.1.2")

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

application {
    // Define the main class for the application.
    mainClass.set("oidc.MySpringBootApplication")
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
