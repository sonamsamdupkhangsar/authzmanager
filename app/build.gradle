
plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id("org.springframework.boot")  version "3.1.0"
    id("io.spring.dependency-management") version "1.1.0"
    id("maven-publish")
    id("de.undercouch.download") version "5.3.0" //new relic agent download local
    id 'java-library'
}

group = 'me.sonam.authzmanager'
version = '1.0'
description = 'authzmanager'

java.sourceCompatibility = JavaVersion.VERSION_17

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    mavenLocal()
    mavenCentral()
}
ext {
    set("springCloudVersion", "2022.0.3")
}
dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation ("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client")
    implementation ("org.springframework.cloud:spring-cloud-starter-kubernetes-client-all:3.0.3")
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation ("org.postgresql:postgresql:42.6.0")
    implementation ("com.github.ben-manes.caffeine:caffeine:3.1.6")
    testImplementation ("org.springframework.boot:spring-boot-starter-test")
    testImplementation ('com.h2database:h2:2.2.220')
    testImplementation ("org.junit.jupiter:junit-jupiter")
    testImplementation ("com.squareup.okhttp3:mockwebserver:4.0.1")
    // Use JUnit Jupiter for testing.
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

tasks.named("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}


dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/sonamsamdupkhangsar/authzmanager"
            credentials {
                username = System.getenv("USERNAME")
                password = System.getenv("PERSONAL_ACCESS_TOKEN")
            }
        }
    }
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

task downloadNewrelic(type: Download) {
    mkdir 'newrelic'
    src 'https://download.newrelic.com/newrelic/java-agent/newrelic-agent/current/newrelic-java.zip'
    dest file('newrelic')
}

task unzipNewrelic(type: Copy) {
    from zipTree(file('newrelic/newrelic-java.zip'))
    into rootDir
}