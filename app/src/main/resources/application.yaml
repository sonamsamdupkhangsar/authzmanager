server:
  port: ${SERVER_PORT}

logging:
  level:
    root: warn
    me.sonam.authzmanager: info
    me.sonam.authzmanager.tokenfilter: debug
#    org.springframework.web: info
#    org.springframework.security: info
#    org.springframework.security.oauth2: info
#    org.springframework.boot.autoconfigure: warn

spring:
  main:
    allow-bean-definition-overriding: true
  profiles:
    active: local
  application:
    name: authzmanager
  thymeleaf:
    cache: false
  mvc:
    hiddenmethod:
      filter:
        enabled: true
#  r2dbc:
#    url: r2dbc:postgresql://${POSTGRES_SERVICE}/${POSTGRES_DBNAME}
#    username: ${POSTGRES_USERNAME}
#    password: ${POSTGRES_PASSWORD}
#    properties:
#      sslMode: ${DB_SSLMODE}
#  jpa:
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.PostgreSQLDialect
#    generate-ddl: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${ISSUER_URI}
          audiences: ${OAUTH_AUDIENCES}

permitpath:
  - path: /authzmanager/api/health/*

jwtrequest:
  - in:  /*
    out: /authenticate
    accessToken:
      option: request
      scopes: ${REQUEST_SCOPES}
      base64EncodedClientIdSecret: ${BASE64_CLIENT_ID_SECRET}
  - in:  /*
    out: /organizations
    accessToken:
      option: request
      scopes: ${REQUEST_SCOPES}
      base64EncodedClientIdSecret: ${BASE64_CLIENT_ID_SECRET}
  - in:  /*
    out: /users,/issuer/clients/(.)*,/issuer/clients,/organizations,/organizations/(.)*,/roles,/roles/organizations/(.)*,/roles/(.)*
    accessToken:
      option: request
      scopes: ${REQUEST_SCOPES}
      base64EncodedClientIdSecret: ${BASE64_CLIENT_ID_SECRET}


user-rest-service:
  root: ${USER_REST_SERVICE}/users

# this is used for getting accesstoken by header filter in jwt-validator (ReactiveRequestContextHolder.class)
auth-server:
  root: ${AUTH_SERVER}
  clients: /clients
  authenticate: /myauthenticate
  oauth2token:
    path: /oauth2/token
    params: ?grant_type=client_credentials

authentication-rest-service:
  root: ${AUTHENTICATION_REST_SERVICE}/authentications
  authenticate: /authenticate

organization-rest-service:
  root: ${ORGANIZATION_REST_SERVICE}
  contextPath: /organizations

role-rest-service:
  root: ${ROLE_REST_SERVICE}
  contextPath: /roles


allowedOrigins: ${allowedOrigins}

oauthClientId: authzmanager-client