server:
  port: ${SERVER_PORT}

logging:
  level:
    root: debug
    me.sonam.auth: info
#    org.springframework.web: info
#    org.springframework.security: info
#    org.springframework.security.oauth2: info
#    org.springframework.boot.autoconfigure: warn

spring:
  main:
    allow-bean-definition-overriding: true
  profiles:
    active: local
  application:
    name: authzmanager
  r2dbc:
    url: r2dbc:postgresql://${POSTGRES_SERVICE}/${POSTGRES_DBNAME}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
    properties:
      sslMode: ${DB_SSLMODE}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    generate-ddl: true

permitpath:
  - path: /authzmanager/api/health/*

user-rest-service:
  root: ${USER_REST_SERVICE}
  signup: /signup

# this is used for getting accesstoken by header filter in jwt-validator (ReactiveRequestContextHolder.class)
auth-server:
  root: ${AUTH_SERVER}
  clients: /clients
  oauth2token:
    path: /oauth2/token
    params: ?grant_type=client_credentials

authentication-rest-service:
  root: ${AUTHENTICATION_REST_SERVICE}/authentications
  authenticate: /authenticate

allowedOrigins: ${allowedOrigins}